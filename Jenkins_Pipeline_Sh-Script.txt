pipeline {
    agent any

    environment {
        SLACK_CHANNEL = '#automation-jobs'
    }

    tools {
        maven 'Maven 3.9.11'
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/SaifAlAbabseh/All-Chat-UI-Test-Automation.git'
            }
        }

        stage('Build & Test') {
            steps {
                script {
                    sh 'mvn clean test -DsuiteXmlFile=suites/MainTestSuite.xml -Dbrowser=${browser} -DheadlessMode=${headlessMode} -Dmobile=${mobile} -DincludeAudio=${includeAudio}'
                }
            }
        }
    }

    post {
        always {
            junit 'target/surefire-reports/*.xml'
            archiveArtifacts artifacts: 'target/surefire-reports/**, src/main/screenshots/*.png'
            script {
                def counts = sh(
                    script: '''
                        FILE="target/surefire-reports/testng-results.xml"
                        TOTAL=$(grep -oP '(?<=total=")[0-9]+' "$FILE")
                        PASSED=$(grep -oP '(?<=passed=")[0-9]+' "$FILE")
                        FAILED=$(grep -oP '(?<=failed=")[0-9]+' "$FILE")
                        SKIPPED=$(grep -oP '(?<=skipped=")[0-9]+' "$FILE")
                        IGNORED=$(grep -oP '(?<=ignored=")[0-9]+' "$FILE")
                        echo "$TOTAL,$PASSED,$FAILED,$SKIPPED,$IGNORED"
                    ''',
                    returnStdout: true
                ).trim()

                def parts = counts.split(',')
                def TOTAL_TESTS   = parts[0]
                def PASSED_TESTS  = parts[1]
                def FAILED_TESTS  = parts[2]
                def SKIPPED_TESTS = parts[3]
                def IGNORED_TESTS = parts[4]

                def isSuccess = currentBuild.result == 'SUCCESS'
                def failedScreenshots = isSuccess ? "" : "* üì∏ Screenshots: <${env.BUILD_URL}artifact/src/main/screenshots|Click here>\n"

                def jobStatusOverall = isSuccess ? '‚úÖ  PASSED JOB ‚úÖ' : '‚ùå FAILED JOB ‚ùå';
                def platformTestedOn = params.mobile ? 'üì± Mobile' : 'üñ•Ô∏è Desktop';
                def slackMessage = """
************************************************************
                        ${jobStatusOverall}
************************************************************
* üíº Job: ${env.JOB_NAME}
* üî® Build #: ${env.BUILD_NUMBER}
* üî® Build Link: <${env.BUILD_URL}|Click here>
************************************************************
                        üìä Total Tests = ${TOTAL_TESTS}
************************************************************
* ‚úÖ PASSED: ${PASSED_TESTS}
* ‚ùå FAILED: ${FAILED_TESTS}
* ‚è© SKIPPED: ${SKIPPED_TESTS}
* ‚è© IGNORED: ${IGNORED_TESTS}
************************************************************
* üåê Browser: ${browser}
* ‚öôÔ∏è Platform: ${platformTestedOn}
${failedScreenshots}
* üìã Test Report: <${env.BUILD_URL}artifact/target/surefire-reports/index.html|Click here>
""";

                // Choose color based on build result
                def color = isSuccess ? 'good' : 'danger'

                // Send Slack message
                slackSend(
                    channel: "${env.SLACK_CHANNEL}",
                    color: color,
                    message: slackMessage
                )
            }
        }
    }
}
